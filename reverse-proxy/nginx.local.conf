worker_processes auto;
events { worker_connections 1024; }

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  # Upstreams (service names from docker compose)
  upstream frontend_upstream { server frontend:5173; }      # Vite dev server
  upstream backend_upstream  { server openai-backend:3001; }
  upstream rest_upstream     { server supabase-rest:3000; }
  upstream auth_upstream     { server supabase-auth:9999; }

  # --- HTTP only for local ---
  server {
    listen 80;
    server_name localhost;

    # ----- Static Frontend -----
    location / {
      proxy_pass http://frontend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ----- Backend API -----
    location /api/ {
      proxy_pass http://backend_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ----- Supabase REST -----
    location /rest/v1/ {
      proxy_pass http://rest_upstream/;   # /rest/v1/foo -> /foo at PostgREST
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;

      # CORS for local
      add_header Access-Control-Allow-Origin http://localhost always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;

      if ($request_method = OPTIONS) { return 204; }
    }
    # guard: hitting /rest root should not proxy wrongly
    location = /rest/ { return 404; }
    location = /rest  { return 404; }

    # ----- Supabase Auth -----
    location /auth/v1/ {
      proxy_pass http://auth_upstream/;   # /auth/v1/... -> /... at GoTrue
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /auth/ { return 404; }
    location = /auth  { return 404; }
  }
}
