worker_processes auto;

events {
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  upstream rest_upstream {
    server supabase-rest-dev:3000;
  }

  upstream auth_upstream {
    server supabase-auth-dev:9999;
  }

  server {
    listen 3000;
    server_name _;

    # ---- REST: map /rest/v1/* -> / on PostgREST ----
    location /rest/v1/ {
      proxy_pass http://rest_upstream/;
      proxy_set_header Host $host;

      # Strip upstream CORS so only gateway sets them
      proxy_hide_header Access-Control-Allow-Origin;
      proxy_hide_header Access-Control-Allow-Credentials;
      proxy_hide_header Access-Control-Allow-Headers;
      proxy_hide_header Access-Control-Allow-Methods;
      proxy_hide_header Vary;

      # Allowed CORS origins
      set $cors_origin "";
      if ($http_origin ~* ^http://(localhost|127\.0\.0\.1):5174$) {
        set $cors_origin $http_origin;
      }

      # Preflight requests
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Headers "*" always;
        add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
        add_header Vary "Origin" always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
      }

      # Actual requests
      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Vary "Origin" always;
    }

    # ---- AUTH: map /auth/v1/* -> / on GoTrue ----
    location /auth/v1/ {
      proxy_pass http://auth_upstream/;
      proxy_set_header Host $host;

      proxy_hide_header Access-Control-Allow-Origin;
      proxy_hide_header Access-Control-Allow-Credentials;
      proxy_hide_header Access-Control-Allow-Headers;
      proxy_hide_header Access-Control-Allow-Methods;
      proxy_hide_header Vary;

      set $cors_origin "";
      if ($http_origin ~* ^http://(localhost|127\.0\.0\.1):5174$) {
        set $cors_origin $http_origin;
      }

      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Headers "*" always;
        add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
        add_header Vary "Origin" always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
      }

      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Vary "Origin" always;
    }

    # optional: health check
    location = / {
      return 204;
    }
  }
}
